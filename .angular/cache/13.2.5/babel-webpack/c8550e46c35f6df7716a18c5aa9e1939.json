{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let MapService = /*#__PURE__*/(() => {\n  class MapService {\n    constructor() {\n      this.objects$ = new BehaviorSubject(null);\n      this.selectedRegion$ = new BehaviorSubject(null); // region$ = new BehaviorSubject<Region>(null);\n\n      this.regions = {\n        'Псковская область': {\n          xPercent: 36,\n          yPercent: 32,\n          scale: 2.3\n        },\n        'Орловская область': {\n          xPercent: 40,\n          yPercent: -25,\n          scale: 4.3\n        },\n        'Калужская область': {\n          xPercent: 32,\n          yPercent: -22,\n          scale: 4.5\n        },\n        'Тульская область': {\n          xPercent: 32,\n          yPercent: -36,\n          scale: 4.5\n        },\n        'Москва и Московская область': {\n          xPercent: 22,\n          yPercent: -10,\n          scale: 3.1\n        },\n        'Рязанская область': {\n          xPercent: 18,\n          yPercent: -31,\n          scale: 3.5\n        },\n        'Ярославская область': {\n          xPercent: 6,\n          yPercent: 0,\n          scale: 3.5\n        },\n        'Владимирская область': {\n          xPercent: 10,\n          yPercent: -16,\n          scale: 4\n        },\n        'Ивановская область': {\n          xPercent: 2,\n          yPercent: -15,\n          scale: 4.1\n        },\n        'Нижегородская область': {\n          xPercent: -6,\n          yPercent: -28,\n          scale: 2.2\n        },\n        'Республика Чувашия': {\n          xPercent: -10,\n          yPercent: -42,\n          scale: 4.6\n        },\n        'Республика Марий Эл': {\n          xPercent: -17,\n          yPercent: -37,\n          scale: 4\n        },\n        'Кировская область': {\n          xPercent: -35,\n          yPercent: -24,\n          scale: 2\n        }\n      };\n    }\n\n    selectRegion(region = null) {\n      var _a, _b;\n\n      region = region ? decodeURI(region) : null;\n\n      if (((_a = this.selectedRegion$.value) === null || _a === void 0 ? void 0 : _a.title) !== region) {\n        console.log((_b = this.selectedRegion$.value) === null || _b === void 0 ? void 0 : _b.title);\n\n        if (region) {\n          console.log('if', region);\n          this.selectedRegion$.next({\n            title: region,\n            cameraPosition: this.regions[region.toString()]\n          });\n        } else {\n          console.log('else', region);\n          this.selectedRegion$.next({\n            title: null,\n            cameraPosition: {\n              scale: 1,\n              xPercent: 0,\n              yPercent: 0\n            }\n          });\n        }\n\n        if (region) {\n          document.querySelectorAll('g.group').forEach(g => {\n            if (g['dataset'].id == region) {\n              g.classList.remove('inactive');\n              g.classList.add('active');\n            } else {\n              g.classList.remove('active');\n              g.classList.add('inactive');\n            }\n          });\n        } else {\n          document.querySelectorAll('g.group').forEach(g => {\n            g.classList.remove('active', 'inactive');\n          });\n        }\n      }\n    }\n\n    setObjects(objects) {\n      // console.log(\"🚀 ~ file: map.service.ts ~ line 107 ~ MapService ~ setObjects ~ objects\", objects)\n      this.objects$.next(objects);\n    }\n\n  }\n\n  MapService.ɵfac = function MapService_Factory(t) {\n    return new (t || MapService)();\n  };\n\n  MapService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MapService,\n    factory: MapService.ɵfac,\n    providedIn: 'root'\n  });\n  return MapService;\n})();","map":null,"metadata":{},"sourceType":"module"}
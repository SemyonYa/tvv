{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/services/breadcrumbs.service\";\nimport * as i3 from \"src/services/api/place.rest.service\";\nimport * as i4 from \"src/services/api/project.rest.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../../shared/components/data/data.component\";\nimport * as i7 from \"../../../shared/components/search-input/search-input.component\";\nimport * as i8 from \"../../../shared/components/grid/grid.component\";\nimport * as i9 from \"../../../shared/components/modal/modal.component\";\n\nfunction CabPlaceComponent_div_0_i_grid_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i-grid\", 9);\n    i0.ɵɵlistener(\"onEditItem\", function CabPlaceComponent_div_0_i_grid_7_Template_i_grid_onEditItem_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return ctx_r3.editCtor($event);\n    })(\"onDeleteItem\", function CabPlaceComponent_div_0_i_grid_7_Template_i_grid_onDeleteItem_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.onDelete($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"items\", ctx_r2.filteredCtors)(\"titles\", ctx_r2.titles)(\"withEdit\", true)(\"withDelete\", true)(\"fields\", ctx_r2.fields);\n  }\n}\n\nconst _c0 = function (a0) {\n  return [a0];\n};\n\nfunction CabPlaceComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"button\", 3);\n    i0.ɵɵelement(2, \"img\", 4);\n    i0.ɵɵtext(3, \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"i-data\", 5)(5, \"div\", 6)(6, \"i-search-input\", 7);\n    i0.ɵɵlistener(\"onChange\", function CabPlaceComponent_div_0_Template_i_search_input_onChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.search($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, CabPlaceComponent_div_0_i_grid_7_Template, 1, 5, \"i-grid\", 8);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(3, _c0, \"/cab/places/\" + ctx_r0.placeId + \"/add\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"list\", ctx_r0.ctors);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.filteredCtors);\n  }\n}\n\nfunction CabPlaceComponent_i_modal_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i-modal\", 10);\n    i0.ɵɵlistener(\"onCancel\", function CabPlaceComponent_i_modal_1_Template_i_modal_onCancel_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.closeCtor();\n    })(\"onOk\", function CabPlaceComponent_i_modal_1_Template_i_modal_onOk_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.deleteCtor();\n    });\n    i0.ɵɵelementStart(1, \"p\")(2, \"strong\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \"\\u0423\\u0432\\u0435\\u0440\\u0435\\u043D?\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\\u0423\\u0434\\u0430\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043E\\u0431\\u044A\\u0435\\u043A\\u0442\\u0430 \", ctx_r1.ctorForDelete.name, \"\");\n  }\n}\n\nexport let CabPlaceComponent = /*#__PURE__*/(() => {\n  class CabPlaceComponent {\n    constructor(activatedRoute, breadcrumbsService, placeRest, projectRest, router) {\n      this.activatedRoute = activatedRoute;\n      this.breadcrumbsService = breadcrumbsService;\n      this.placeRest = placeRest;\n      this.projectRest = projectRest;\n      this.router = router;\n      this.titles = ['ID', 'Наименование'];\n      this.fields = ['id', 'name'];\n      this.searchValue = '';\n    }\n\n    ngOnInit() {\n      this.placeId = this.activatedRoute.snapshot.params.placeId;\n      this.fetchData();\n    }\n\n    fetchData() {\n      this.placeRest.get(this.placeId).subscribe(item => {\n        this.place = item;\n        this.ctors = item.projects;\n        this.filterCtors();\n        this.breadcrumbsService.setItems([{\n          title: this.place.region,\n          route: `/cab/regions/${this.place.region}`\n        }, {\n          title: this.place.name,\n          route: ``\n        }]);\n      });\n    }\n\n    editCtor(id) {\n      this.router.navigateByUrl(`/cab/places/${this.placeId}/edit/${id}`);\n    }\n\n    onDelete(id) {\n      this.ctorForDelete = this.ctors.find(c => c.id == id);\n    }\n\n    deleteCtor() {\n      this.projectRest.delete(this.ctorForDelete.id).subscribe(res => {\n        this.fetchData();\n        this.ctorForDelete = null;\n      }, this.projectRest.handleError);\n    }\n\n    closeCtor() {\n      this.ctorForDelete = null;\n    }\n\n    search(value) {\n      this.searchValue = value;\n      this.filterCtors();\n    }\n\n    filterCtors() {\n      this.filteredCtors = this.ctors ? this.ctors.filter(u => {\n        const searchFields = [u.name].join(' ').toLocaleLowerCase();\n        return this.searchValue ? searchFields.indexOf(this.searchValue.toLocaleLowerCase()) !== -1 : true;\n      }) : null;\n    }\n\n  }\n\n  CabPlaceComponent.ɵfac = function CabPlaceComponent_Factory(t) {\n    return new (t || CabPlaceComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.BreadcrumbsService), i0.ɵɵdirectiveInject(i3.PlaceRestService), i0.ɵɵdirectiveInject(i4.ProjectRestService), i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  CabPlaceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CabPlaceComponent,\n    selectors: [[\"tvv-cab-place\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[\"class\", \"wrap col\", 4, \"ngIf\"], [3, \"onCancel\", \"onOk\", 4, \"ngIf\"], [1, \"wrap\", \"col\"], [\"type\", \"button\", 1, \"add\", \"success\", 3, \"routerLink\"], [\"src\", \"/assets/icons/plus-white.svg\", \"alt\", \"ADD\"], [3, \"list\"], [1, \"col\"], [3, \"onChange\"], [3, \"items\", \"titles\", \"withEdit\", \"withDelete\", \"fields\", \"onEditItem\", \"onDeleteItem\", 4, \"ngIf\"], [3, \"items\", \"titles\", \"withEdit\", \"withDelete\", \"fields\", \"onEditItem\", \"onDeleteItem\"], [3, \"onCancel\", \"onOk\"]],\n    template: function CabPlaceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CabPlaceComponent_div_0_Template, 8, 5, \"div\", 0);\n        i0.ɵɵtemplate(1, CabPlaceComponent_i_modal_1_Template, 6, 1, \"i-modal\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.place);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.ctorForDelete);\n      }\n    },\n    directives: [i5.NgIf, i1.RouterLink, i6.DataComponent, i7.SearchInputComponent, i8.GridComponent, i9.ModalComponent],\n    styles: [\"button.add[_ngcontent-%COMP%]{align-self:flex-start}\"]\n  });\n  return CabPlaceComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
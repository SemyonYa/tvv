{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../form-item/form-item.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../image-input/image-input.component\";\n\nfunction CtorItemComponent_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const type_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(type_r3);\n  }\n}\n\nfunction CtorItemComponent_i_form_item_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"i-form-item\", 11)(1, \"label\");\n    i0.ɵɵtext(2, \"Value\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 12);\n    i0.ɵɵelementStart(4, \"i-image-input\", 13);\n    i0.ɵɵlistener(\"onSelect\", function CtorItemComponent_i_form_item_9_Template_i_image_input_onSelect_4_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.selectThumb($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", ctx_r1.form);\n  }\n}\n\nfunction CtorItemComponent_i_form_item_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"i-form-item\", 11)(1, \"label\");\n    i0.ɵɵtext(2, \"Value\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"textarea\", 14);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"form\", ctx_r2.form);\n  }\n}\n\nexport let CtorItemComponent = /*#__PURE__*/(() => {\n  class CtorItemComponent {\n    constructor() {\n      this.onAdd = new EventEmitter();\n      this.onRemove = new EventEmitter();\n      this.types = [];\n    }\n\n    get selectedType() {\n      return this.form.get('type').value;\n    }\n\n    ngOnInit() {\n      for (const key in CtorItemType) {\n        this.types.push(CtorItemType[key]);\n      }\n\n      this.generateForm();\n      this.form.valueChanges.subscribe(values => {\n        for (let key in values) {\n          this.item[key] = values[key];\n        }\n      });\n    }\n\n    generateForm() {\n      var _a, _b, _c, _d;\n\n      this.form = new FormGroup({\n        type: new FormControl((_b = (_a = this.item) === null || _a === void 0 ? void 0 : _a.type) !== null && _b !== void 0 ? _b : CtorItemType.Text, [Validators.required]),\n        value: new FormControl((_d = (_c = this.item) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : '', [Validators.required])\n      });\n    }\n\n    selectThumb(image) {\n      this.form.patchValue({\n        value: image.id\n      });\n    }\n\n    add() {\n      this.onAdd.emit(this.item);\n    }\n\n    remove() {\n      this.onRemove.emit(this.index);\n    }\n\n  }\n\n  CtorItemComponent.ɵfac = function CtorItemComponent_Factory(t) {\n    return new (t || CtorItemComponent)();\n  };\n\n  CtorItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CtorItemComponent,\n    selectors: [[\"i-ctor-item\"]],\n    inputs: {\n      item: \"item\",\n      index: \"index\"\n    },\n    outputs: {\n      onAdd: \"onAdd\",\n      onRemove: \"onRemove\"\n    },\n    decls: 14,\n    vars: 6,\n    consts: [[1, \"col\", 3, \"formGroup\"], [1, \"row\"], [\"type\", \"button\", 1, \"icon\", \"remove\", 3, \"click\"], [\"src\", \"/assets/icons/trash.svg\", \"alt\", \"REMOVE\"], [\"control\", \"type\", 3, \"form\"], [\"formControlName\", \"type\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"control\", \"value\", 3, \"form\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"add-item\", 3, \"click\"], [\"src\", \"/assets/icons/plus-blue.svg\", \"alt\", \"ADD\"], [3, \"value\"], [\"control\", \"value\", 3, \"form\"], [\"type\", \"text\", \"formControlName\", \"value\", \"readonly\", \"\", 1, \"non\"], [3, \"onSelect\"], [\"type\", \"text\", \"formControlName\", \"value\", \"rows\", \"4\"]],\n    template: function CtorItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"p\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function CtorItemComponent_Template_button_click_4_listener() {\n          return ctx.remove();\n        });\n        i0.ɵɵelement(5, \"img\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"i-form-item\", 4)(7, \"select\", 5);\n        i0.ɵɵtemplate(8, CtorItemComponent_option_8_Template, 2, 2, \"option\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(9, CtorItemComponent_i_form_item_9_Template, 5, 1, \"i-form-item\", 7);\n        i0.ɵɵtemplate(10, CtorItemComponent_i_form_item_10_Template, 4, 1, \"i-form-item\", 7);\n        i0.ɵɵelementStart(11, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function CtorItemComponent_Template_button_click_11_listener() {\n          return ctx.add();\n        });\n        i0.ɵɵtext(12, \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \");\n        i0.ɵɵelement(13, \"img\", 9);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"[Constructor item #\", ctx.index, \"]\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"form\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.types);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedType === \"Image\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectedType !== \"Image\");\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i2.FormItemComponent, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.FormControlName, i3.NgForOf, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i3.NgIf, i1.DefaultValueAccessor, i4.FileInputComponent],\n    styles: [\".row[_ngcontent-%COMP%]{align-items:center}.row[_ngcontent-%COMP%]   select[_ngcontent-%COMP%]{min-width:200px}.row[_ngcontent-%COMP%]   button.add[_ngcontent-%COMP%]{border:solid 2px var(--color-success)}.row[_ngcontent-%COMP%]   button.remove[_ngcontent-%COMP%]{border:solid 2px var(--color-danger);margin-left:auto}.ng-invalid[_ngcontent-%COMP%]{border-color:var(--color-danger)}button.add-item[_ngcontent-%COMP%]{margin-bottom:12px;border:solid 1px var(--color-blue);align-self:center;min-width:30%}button.add-item[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin-left:4px}i-file-input[_ngcontent-%COMP%]{display:block;margin-bottom:12px}\"]\n  });\n  return CtorItemComponent;\n})();\nexport const CtorItemType = {\n  Text: 'Text',\n  Image: 'Image',\n  H1: 'H1',\n  H2: 'H2',\n  List: 'List',\n  Comment: 'Comment'\n};","map":null,"metadata":{},"sourceType":"module"}